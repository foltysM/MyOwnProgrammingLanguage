2021-05-08 13:05:18:769 grammar LogManager.java:25 before: (COMBINED_GRAMMAR Dwunasta (RULES (RULE prog (BLOCK (ALT start))) (RULE start (BLOCK (ALT (* (BLOCK (ALT (BLOCK (ALT expr SEMICOLON))) (ALT function)))))) (RULE expr (BLOCK (ALT LOOP_BEGIN repetitions start LOOP_END) (ALT IF equal THEN blockif ENDIF) (ALT ID ASSIGN math_stmnt) (ALT PRINT ID LEFT_SQ_BRCKT INT RIGHT_SQ_BRCKT) (ALT ID ASSIGN STRING) (ALT PRINT ID) (ALT READ ID) (ALT ID))) (RULE function (BLOCK (ALT BEGINFUNCTION fparam fblock ENDFUNCTION))) (RULE blockif (BLOCK (ALT start))) (RULE math_stmnt (BLOCK (ALT value) (ALT value ADD value) (ALT value SUB value))) (RULE equal (BLOCK (ALT ID '==' INT))) (RULE repetitions (BLOCK (ALT INT))) (RULE value (BLOCK (ALT INT) (ALT REAL) (ALT STRING) (ALT ARRAY) (ALT CASTINT value) (ALT CASTREAL value) (ALT '(' math_stmnt ')') (ALT ID))) (RULE fparam (BLOCK (ALT ID))) (RULE fblock (BLOCK (ALT (* (BLOCK (ALT expr SEMICOLON)))))) (RULE IF (BLOCK (ALT 'if'))) (RULE ENDIF (BLOCK (ALT 'endif'))) (RULE THEN (BLOCK (ALT 'then'))) (RULE BEGINFUNCTION (BLOCK (ALT 'beginf'))) (RULE LOOP_BEGIN (BLOCK (ALT 'loop'))) (RULE LOOP_END (BLOCK (ALT 'endloop'))) (RULE ENDFUNCTION (BLOCK (ALT 'endf'))) (RULE PRINT (BLOCK (ALT 'print'))) (RULE LEFT_SQ_BRCKT (BLOCK (ALT '['))) (RULE RIGHT_SQ_BRCKT (BLOCK (ALT ']'))) (RULE READ (BLOCK (ALT 'scan'))) (RULE ARRAY (BLOCK (ALT '[' (+ (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))) (? (BLOCK (ALT ',')))))) ']'))) (RULE CASTINT (BLOCK (ALT '(int)'))) (RULE ASSIGN (BLOCK (ALT '='))) (RULE CASTREAL (BLOCK (ALT '(real)'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT (.. 'a' 'z')) (ALT (.. 'A' 'Z'))))))) (RULE REAL (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))) '.' (+ (BLOCK (ALT (.. '0' '9'))))))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9'))))))) (RULE ADD (BLOCK (ALT '+'))) (RULE SEMICOLON (BLOCK (ALT ';'))) (RULE SUB (BLOCK (ALT '-'))) (RULE STRING (BLOCK (ALT '"' (* (BLOCK (ALT (~ (SET '\\' '"'))))) '"'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2021-05-08 13:05:18:782 grammar LogManager.java:25 after: (COMBINED_GRAMMAR Dwunasta (RULES (RULE prog (BLOCK (ALT start))) (RULE start (BLOCK (ALT (* (BLOCK (ALT (BLOCK (ALT expr SEMICOLON))) (ALT function)))))) (RULE expr (BLOCK (ALT LOOP_BEGIN repetitions start LOOP_END) (ALT IF equal THEN blockif ENDIF) (ALT ID ASSIGN math_stmnt) (ALT PRINT ID LEFT_SQ_BRCKT INT RIGHT_SQ_BRCKT) (ALT ID ASSIGN STRING) (ALT PRINT ID) (ALT READ ID) (ALT ID))) (RULE function (BLOCK (ALT BEGINFUNCTION fparam fblock ENDFUNCTION))) (RULE blockif (BLOCK (ALT start))) (RULE math_stmnt (BLOCK (ALT value) (ALT value ADD value) (ALT value SUB value))) (RULE equal (BLOCK (ALT ID '==' INT))) (RULE repetitions (BLOCK (ALT INT))) (RULE value (BLOCK (ALT INT) (ALT REAL) (ALT STRING) (ALT ARRAY) (ALT CASTINT value) (ALT CASTREAL value) (ALT '(' math_stmnt ')') (ALT ID))) (RULE fparam (BLOCK (ALT ID))) (RULE fblock (BLOCK (ALT (* (BLOCK (ALT expr SEMICOLON)))))) (RULE IF (BLOCK (ALT 'if'))) (RULE ENDIF (BLOCK (ALT 'endif'))) (RULE THEN (BLOCK (ALT 'then'))) (RULE BEGINFUNCTION (BLOCK (ALT 'beginf'))) (RULE LOOP_BEGIN (BLOCK (ALT 'loop'))) (RULE LOOP_END (BLOCK (ALT 'endloop'))) (RULE ENDFUNCTION (BLOCK (ALT 'endf'))) (RULE PRINT (BLOCK (ALT 'print'))) (RULE LEFT_SQ_BRCKT (BLOCK (ALT '['))) (RULE RIGHT_SQ_BRCKT (BLOCK (ALT ']'))) (RULE READ (BLOCK (ALT 'scan'))) (RULE ARRAY (BLOCK (ALT '[' (+ (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))) (? (BLOCK (ALT ',')))))) ']'))) (RULE CASTINT (BLOCK (ALT '(int)'))) (RULE ASSIGN (BLOCK (ALT '='))) (RULE CASTREAL (BLOCK (ALT '(real)'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT (SET (.. 'a' 'z') (.. 'A' 'Z')))))))) (RULE REAL (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))) '.' (+ (BLOCK (ALT (.. '0' '9'))))))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9'))))))) (RULE ADD (BLOCK (ALT '+'))) (RULE SEMICOLON (BLOCK (ALT ';'))) (RULE SUB (BLOCK (ALT '-'))) (RULE STRING (BLOCK (ALT '"' (* (BLOCK (ALT (~ (SET '\\' '"'))))) '"'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2021-05-08 13:05:18:796 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR Dwunasta (RULES (RULE prog (BLOCK (ALT start))) (RULE start (BLOCK (ALT (* (BLOCK (ALT (BLOCK (ALT expr SEMICOLON))) (ALT function)))))) (RULE expr (BLOCK (ALT LOOP_BEGIN repetitions start LOOP_END) (ALT IF equal THEN blockif ENDIF) (ALT ID ASSIGN math_stmnt) (ALT PRINT ID LEFT_SQ_BRCKT INT RIGHT_SQ_BRCKT) (ALT ID ASSIGN STRING) (ALT PRINT ID) (ALT READ ID) (ALT ID))) (RULE function (BLOCK (ALT BEGINFUNCTION fparam fblock ENDFUNCTION))) (RULE blockif (BLOCK (ALT start))) (RULE math_stmnt (BLOCK (ALT value) (ALT value ADD value) (ALT value SUB value))) (RULE equal (BLOCK (ALT ID '==' INT))) (RULE repetitions (BLOCK (ALT INT))) (RULE value (BLOCK (ALT INT) (ALT REAL) (ALT STRING) (ALT ARRAY) (ALT CASTINT value) (ALT CASTREAL value) (ALT '(' math_stmnt ')') (ALT ID))) (RULE fparam (BLOCK (ALT ID))) (RULE fblock (BLOCK (ALT (* (BLOCK (ALT expr SEMICOLON))))))))
2021-05-08 13:05:18:796 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR DwunastaLexer (RULES (RULE T__0 (BLOCK (ALT '=='))) (RULE T__1 (BLOCK (ALT '('))) (RULE T__2 (BLOCK (ALT ')'))) (RULE IF (BLOCK (ALT 'if'))) (RULE ENDIF (BLOCK (ALT 'endif'))) (RULE THEN (BLOCK (ALT 'then'))) (RULE BEGINFUNCTION (BLOCK (ALT 'beginf'))) (RULE LOOP_BEGIN (BLOCK (ALT 'loop'))) (RULE LOOP_END (BLOCK (ALT 'endloop'))) (RULE ENDFUNCTION (BLOCK (ALT 'endf'))) (RULE PRINT (BLOCK (ALT 'print'))) (RULE LEFT_SQ_BRCKT (BLOCK (ALT '['))) (RULE RIGHT_SQ_BRCKT (BLOCK (ALT ']'))) (RULE READ (BLOCK (ALT 'scan'))) (RULE ARRAY (BLOCK (ALT '[' (+ (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))) (? (BLOCK (ALT ',')))))) ']'))) (RULE CASTINT (BLOCK (ALT '(int)'))) (RULE ASSIGN (BLOCK (ALT '='))) (RULE CASTREAL (BLOCK (ALT '(real)'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT (SET (.. 'a' 'z') (.. 'A' 'Z')))))))) (RULE REAL (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))) '.' (+ (BLOCK (ALT (.. '0' '9'))))))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9'))))))) (RULE ADD (BLOCK (ALT '+'))) (RULE SEMICOLON (BLOCK (ALT ';'))) (RULE SUB (BLOCK (ALT '-'))) (RULE STRING (BLOCK (ALT '"' (* (BLOCK (ALT (~ (SET '\\' '"'))))) '"'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2021-05-08 13:05:18:932 semantics LogManager.java:25 tokens={EOF=-1, T__0=1, T__1=2, T__2=3, IF=4, ENDIF=5, THEN=6, BEGINFUNCTION=7, LOOP_BEGIN=8, LOOP_END=9, ENDFUNCTION=10, PRINT=11, LEFT_SQ_BRCKT=12, RIGHT_SQ_BRCKT=13, READ=14, ARRAY=15, CASTINT=16, ASSIGN=17, CASTREAL=18, ID=19, REAL=20, INT=21, ADD=22, SEMICOLON=23, SUB=24, STRING=25, WS=26}
2021-05-08 13:05:18:932 semantics LogManager.java:25 strings={'=='=1, '('=2, ')'=3, 'if'=4, 'endif'=5, 'then'=6, 'beginf'=7, 'loop'=8, 'endloop'=9, 'endf'=10, 'print'=11, '['=12, ']'=13, 'scan'=14, '(int)'=16, '='=17, '(real)'=18, '+'=22, ';'=23, '-'=24}
2021-05-08 13:05:18:936 LL1 LogManager.java:25 
DECISION 0 in rule start
2021-05-08 13:05:18:936 LL1 LogManager.java:25 look=[{4, 8, 11, 14, 19}, 7]
2021-05-08 13:05:18:936 LL1 LogManager.java:25 LL(1)? true
2021-05-08 13:05:18:936 LL1 LogManager.java:25 
DECISION 1 in rule start
2021-05-08 13:05:18:937 LL1 LogManager.java:25 look=[{4, 7..8, 11, 14, 19}, {<EOF>, 5, 9}]
2021-05-08 13:05:18:937 LL1 LogManager.java:25 LL(1)? true
2021-05-08 13:05:18:937 LL1 LogManager.java:25 
DECISION 2 in rule expr
2021-05-08 13:05:18:937 LL1 LogManager.java:25 look=[8, 4, 19, 11, 19, 11, 14, 19]
2021-05-08 13:05:18:937 LL1 LogManager.java:25 LL(1)? false
2021-05-08 13:05:18:937 LL1 LogManager.java:25 
DECISION 3 in rule math_stmnt
2021-05-08 13:05:18:937 LL1 LogManager.java:25 look=[{2, 15..16, 18..21, 25}, {2, 15..16, 18..21, 25}, {2, 15..16, 18..21, 25}]
2021-05-08 13:05:18:937 LL1 LogManager.java:25 LL(1)? false
2021-05-08 13:05:18:937 LL1 LogManager.java:25 
DECISION 4 in rule value
2021-05-08 13:05:18:937 LL1 LogManager.java:25 look=[21, 20, 25, 15, 16, 18, 2, 19]
2021-05-08 13:05:18:937 LL1 LogManager.java:25 LL(1)? true
2021-05-08 13:05:18:937 LL1 LogManager.java:25 
DECISION 5 in rule fblock
2021-05-08 13:05:18:937 LL1 LogManager.java:25 look=[{4, 8, 11, 14, 19}, 10]
2021-05-08 13:05:18:937 LL1 LogManager.java:25 LL(1)? true
